"""add test_cases to app schema

Revision ID: c0892f4993d3
Revises: c236edcfea39
Create Date: 2025-10-02 16:11:27.906963

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c0892f4993d3'
down_revision = 'c236edcfea39'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_index(op.f('ix_app_test_cases_id'), 'test_cases', ['id'], unique=False, schema='app')
    op.create_index(op.f('ix_app_test_cases_name'), 'test_cases', ['name'], unique=False, schema='app')
    op.drop_table('qa_logs', schema='app')
    op.drop_table('inference_capabilities', schema='app')
    op.add_column('sankalpa', sa.Column('status', sa.String(length=50), nullable=True), schema='app')
    op.add_column('sankalpa', sa.Column('is_active', sa.Boolean(), nullable=True), schema='app')
    op.add_column('sankalpa', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True), schema='app')
    op.add_column('sankalpa', sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True), schema='app')
    op.create_index(op.f('ix_app_sankalpa_status'), 'sankalpa', ['status'], unique=False, schema='app')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_app_sankalpa_status'), table_name='sankalpa', schema='app')
    op.drop_column('sankalpa', 'completed_at', schema='app')
    op.drop_column('sankalpa', 'updated_at', schema='app')
    op.drop_column('sankalpa', 'is_active', schema='app')
    op.drop_column('sankalpa', 'status', schema='app')
    op.create_table('inference_capabilities',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('vcv_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('harvested_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='inference_capabilities_pkey'),
    schema='app'
    )
    op.create_table('qa_logs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('model', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quant', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('request_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('response_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='qa_logs_pkey'),
    schema='app'
    )
    op.drop_index(op.f('ix_app_test_cases_name'), table_name='test_cases', schema='app')
    op.drop_index(op.f('ix_app_test_cases_id'), table_name='test_cases', schema='app')
    op.drop_table('test_cases', schema='app')
    # ### end Alembic commands ###
